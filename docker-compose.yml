version: "3.7"

services:
  nginx:
    container_name: nginx
    image: nginx
    build:
      dockerfile: Dockerfile
      context: ./nginx
    ports:
      - 80:80
    depends_on:
      - backend
    networks:
      - app-tier

  frontend:
    container_name: frontend
    #Dockerfile의 경로
    build:
      context: ./frontend
      dockerfile: Dockerfile
    platform: linux/amd64
    ports:
      - 3000:3000
    networks:
      - app-tier

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    networks:
      - app-tier
    depends_on:
      - mysql
    restart: on-failure

  mysql:
    container_name: mysql
    build:
      context: ./mysql
      dockerfile: Dockerfile
    platform: linux/amd64
    command: mysqld --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      # init.sql로 db 초기화
      - ./mysql/mysql-init-file:/docker-entrypoint-initdb.d/:ro
      - ./mysql/data:/var/lib/mysql
    networks:
      - app-tier
    depends_on:
      - redis

  redis:
    container_name: redis
    image: redis:alpine
    command: redis-server --port 6379
    hostname: redis_host
    labels:
      - "name=redis"
      - "mode=standalone"
    ports:
      - 6379:6379
    networks:
      - app-tier

networks:
  app-tier:
    driver: bridge
